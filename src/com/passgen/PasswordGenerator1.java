package com.passgen;

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionListener;
import java.awt.event.ItemListener;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

/**
 *
 * @author orxan
 */
public class PasswordGenerator1 extends javax.swing.JFrame implements ActionListener, ItemListener {

    /**
     * Creates new form PasswordGenerator1
     */
    public PasswordGenerator1() {
        initComponents();
        setResizable(true);
        setLocationRelativeTo(this);
        setTitle("Password Generator");

        pass_length.setValue(4);
        pass_length.setMinimum(4);
        pass_length.setMaximum(32);
        pass_length.enableInputMethods(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JPasswordField();
        capital_letters = new javax.swing.JCheckBox();
        string_letters = new javax.swing.JCheckBox();
        digits = new javax.swing.JCheckBox();
        special_chars = new javax.swing.JCheckBox();
        pass_length = new com.toedter.components.JSpinField();
        btn_copy = new javax.swing.JButton();
        btn_generate = new javax.swing.JButton();
        showpass = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        display.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        display.setName("display"); // NOI18N

        capital_letters.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/passgen/Bundle"); // NOI18N
        capital_letters.setText(bundle.getString("PasswordGenerator1.capital_letters.text")); // NOI18N
        capital_letters.setName("capital_letters"); // NOI18N

        string_letters.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        string_letters.setText(bundle.getString("PasswordGenerator1.string_letters.text")); // NOI18N
        string_letters.setName("string_letters"); // NOI18N

        digits.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        digits.setText(bundle.getString("PasswordGenerator1.digits.text")); // NOI18N
        digits.setName("digits"); // NOI18N

        special_chars.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        special_chars.setText(bundle.getString("PasswordGenerator1.special_chars.text")); // NOI18N
        special_chars.setName("special_chars"); // NOI18N

        pass_length.setName("pass_length"); // NOI18N

        btn_copy.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_copy.setText(bundle.getString("PasswordGenerator1.btn_copy.text")); // NOI18N
        btn_copy.setName("btn_copy"); // NOI18N
        btn_copy.addActionListener(this);

        btn_generate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_generate.setText(bundle.getString("PasswordGenerator1.btn_generate.text")); // NOI18N
        btn_generate.setName("btn_generate"); // NOI18N
        btn_generate.addActionListener(this);

        showpass.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        showpass.setText(bundle.getString("PasswordGenerator1.showpass.text")); // NOI18N
        showpass.setName("showpass"); // NOI18N
        showpass.addItemListener(this);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(display)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(capital_letters, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(special_chars)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(string_letters)
                                .add(17, 17, 17))
                            .add(digits)
                            .add(pass_length, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 49, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_generate)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btn_copy)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, showpass))))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {btn_copy, btn_generate}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(display, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pass_length, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(showpass))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(capital_letters)
                .add(6, 6, 6)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(string_letters)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(digits)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(special_chars))
                    .add(layout.createSequentialGroup()
                        .add(btn_generate)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btn_copy)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {btn_copy, btn_generate}, org.jdesktop.layout.GroupLayout.VERTICAL);

        layout.linkSize(new java.awt.Component[] {pass_length, showpass}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == btn_generate) {
            PasswordGenerator1.this.btn_generateActionPerformed(evt);
        }
        else if (evt.getSource() == btn_copy) {
            PasswordGenerator1.this.btn_copyActionPerformed(evt);
        }
    }

    public void itemStateChanged(java.awt.event.ItemEvent evt) {
        if (evt.getSource() == showpass) {
            PasswordGenerator1.this.showpassItemStateChanged(evt);
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btn_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generateActionPerformed
        all();
    }//GEN-LAST:event_btn_generateActionPerformed

    private void all() {
        try {
            String newpass = "";
            String chars = "";
            String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZÖĞIƏÇŞÜ";
            String lower = "abcdefghijklmnopqrstuvwxyzöğıəçşü";
            String number = "0123456789";
            String simbol = "<>?';:/*-+.#$%^&£!@ß,";

            if (capital_letters.isSelected()) {
                chars += upper;
            }
            if (string_letters.isSelected()) {
                chars += lower;
            }
            if (digits.isSelected()) {
                chars += number;
            }
            if (special_chars.isSelected()) {
                chars += simbol;
            } else if (capital_letters.isSelected() == false
                    && string_letters.isSelected() == false
                    && digits.isSelected() == false
                    && special_chars.isSelected() == false) {
                chars += upper + lower + number + simbol;
            }

            char[] characters = chars.toCharArray();

            SecureRandom random = SecureRandom.getInstanceStrong();
            StringBuilder sb = new StringBuilder(pass_length.getValue());

            for (int i = 1; i <= pass_length.getValue(); i++) {
                int choice = random.nextInt(characters.length);
                newpass += characters[choice];
            }
            chars = "";

            display.setText(newpass);

        } catch (NoSuchAlgorithmException e) {
        }
    }

    private void showpassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showpassItemStateChanged
        if (showpass.isSelected()) {
            display.setEchoChar('\000');
        } else {
            display.setEchoChar('*');
        }
    }//GEN-LAST:event_showpassItemStateChanged

    private void btn_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_copyActionPerformed
        try {
            display.copy();

            @SuppressWarnings("deprecation")
            StringSelection stringSelection = new StringSelection(display.getText());
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
            
        } catch (HeadlessException e) {
        }
    }//GEN-LAST:event_btn_copyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PasswordGenerator1().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton btn_copy;
    javax.swing.JButton btn_generate;
    javax.swing.JCheckBox capital_letters;
    javax.swing.JCheckBox digits;
    javax.swing.JPasswordField display;
    com.toedter.components.JSpinField pass_length;
    javax.swing.JCheckBox showpass;
    javax.swing.JCheckBox special_chars;
    javax.swing.JCheckBox string_letters;
    // End of variables declaration//GEN-END:variables
}
